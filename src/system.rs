use super::entity::World;

/// Trait that must be implemented by all systems in the `Simulation`. The generic parameter `E` is
/// the `Events` type generated by the `simulation!` macro.
pub trait System<E> {
    /// `System`s should be initializable with an empty constructor.
    fn new() -> Self;

    /// This method is called each frame, giving the `System` mutable access to the `World` and
    /// `Events`. `dt` is the time in milliseconds since the last update.
    fn update(&mut self, world: &mut World, events: &mut E, dt: f32);
}
